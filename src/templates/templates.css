/* --- Contenedor principal del hero (portada) --- */
.hero-surface {
  position: relative;
  overflow: hidden;
  isolation: isolate; /* para que el blend del grano mezcle con el propio fondo */

  /* 1) Imagen de PORTADA (cuando exista cover) */
  --hero-cover-image: none;
  background-image: var(--hero-cover-image);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;

  /* 2) Fondo de PLANTILLA y overlay (se pintan en ::before) */
  --hero-image: none;     /* acuarela/plantilla */
  --hero-overlay: none;   /* gradiente opcional */

  /* 🔹 Defaults de grano (Opción A: control por tokens) */
  --hero-grain-image: var(--hero-grain-image);
  --hero-grain-repeat: no-repeat;
  --hero-grain-size: cover;          /* desktop */
  --hero-grain-blend: overlay;
  --hero-grain-opacity: 0.50;

  min-height: min(78vh, 860px);
}

/* 2) FONDO (plantilla) + OVERLAY encima de la portada */
.hero-surface::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  /* capa inferior de pseudo-elementos: fondo (hero-image) y overlay */
  background-image: var(--hero-image), var(--hero-overlay);
  background-size: cover, cover;
  background-position: center, center;
  background-repeat: no-repeat, no-repeat;
  z-index: 1;
}

/* 3) GRANO por encima del fondo */
.hero-surface::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-image: var(--hero-grain-image);
  background-repeat: var(--hero-grain-repeat, repeat);
  background-size: var(--hero-grain-size, auto); /* usa 'cover' si exportaste grain grande */
  mix-blend-mode: var(--hero-grain-blend, overlay); /* prueba 'soft-light' según el template */
  opacity: var(--hero-grain-opacity, 0.22);
  z-index: 2;
  /* Orden total: portada(bg) < ::before fondo/overlay (1) < ::after grano (2) < decor (3) < contenido (4) */
}

/* Zona segura de contenido (evita solape con decor) */
.hero-safe {
  position: relative;
  z-index: 4; /* por encima de decor */
  padding-inline: clamp(16px, 4vw, 48px);
  padding-top: clamp(24px, 6vh, 72px);
  padding-bottom: clamp(24px, 6vh, 72px);
}

/* --- Decor genérico (slots PNG) --- */
.decor-slot {
  position: absolute;
  z-index: 3; /* por encima del grano, debajo del contenido */
  pointer-events: none;
  transform-origin: center;
  will-change: transform, opacity, filter;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

/* Hijo animado: hereda el background del wrapper sin tocar su transform de anclaje */
.decor-inner {
  width: 100%;
  height: 100%;
  background-image: inherit;
  background-size: inherit;
  background-repeat: inherit;
  background-position: inherit;
  will-change: transform, opacity;
}

/* Tamaños por defecto (puedes sobreescribir con variables si quieres) */
:root {
  /* FIX ya aplicado: min <= preferido <= max */
  --decor-w-default: clamp(420px, 24vmin, 500px);
  --decor-ar-default: 1.6; /* ancho/alto aproximado, ajusta si hace falta */
}

/* TOP-LEFT: anclado a la esquina, sin translate */
.decor-topLeft {
  left: var(--decor-topLeft-x, 0);
  top: var(--decor-topLeft-y, 0);
  width: var(--decor-topLeft-w, var(--decor-w-default));
  aspect-ratio: var(--decor-topLeft-ar, var(--decor-ar-default));
  opacity: var(--decor-topLeft-opacity, 1);
  background-image: var(--decor-topLeft-image, none);
  /* “pegar” visualmente a la esquina */
  background-position: var(--decor-topLeft-pos, left top);
  transform:
    rotate(var(--decor-topLeft-rotate, 0deg)) scale(var(--decor-topLeft-scale, 1));
}

/* TOP-RIGHT: anclado a la derecha; compensamos con translateX(-100%) */
.decor-topRight {
  left: var(--decor-topRight-x, 100%);
  top: var(--decor-topRight-y, 0);
  width: var(--decor-topRight-w, var(--decor-w-default));
  aspect-ratio: var(--decor-topRight-ar, var(--decor-ar-default));
  opacity: var(--decor-topRight-opacity, 0.9);
  background-image: var(--decor-topRight-image, none);
  background-position: var(--decor-topRight-pos, right top);
  transform:
    translate(-100%, 0) rotate(var(--decor-topRight-rotate, 0deg)) scale(var(--decor-topRight-scale, 1));
}

/* BOTTOM: centrado horizontal y pegado abajo */
.decor-bottom {
  left: var(--decor-bottom-x, 50%);
  top: var(--decor-bottom-y, 100%);
  width: var(--decor-bottom-w, var(--decor-w-default));
  aspect-ratio: var(--decor-bottom-ar, var(--decor-ar-default));
  opacity: var(--decor-bottom-opacity, 1);
  background-image: var(--decor-bottom-image, none);
  background-position: var(--decor-bottom-pos, center bottom);
  transform:
    translate(-50%, -100%) rotate(var(--decor-bottom-rotate, 0deg)) scale(var(--decor-bottom-scale, 1));
}

/* Accesibilidad: reduce motion */
@media (prefers-reduced-motion: reduce) {
  .decor-slot,
  .decor-inner {
    transition: none !important;
    animation: none !important;
  }
}

/* 🔹 Escala móvil recomendada para el grano (tile más fino) */
@media (max-width: 768px) {
  .hero-surface {
    --hero-grain-size: 384px;
  }
}

/* ================================
   Tipografías y colores (manifest)
   ================================ */

/* Defaults seguros: el manifest los sobreescribe vía tokenBridge */
:root {
  --font-family-heading: inherit;
  --font-family-body: inherit;
  --color-bg: transparent;
  --color-fg: inherit;
  --color-accent: currentColor;
}

/* Utilidades no intrusivas (con !important para vencer utilidades Tailwind) */
.heading-font { font-family: var(--font-family-heading, inherit) !important; }
.body-font    { font-family: var(--font-family-body, inherit) !important; }
.text-theme   { color: var(--color-fg, inherit) !important; }
.text-accent  { color: var(--color-accent, currentColor) !important; }
.bg-theme     { background-color: var(--color-bg, transparent) !important; }
